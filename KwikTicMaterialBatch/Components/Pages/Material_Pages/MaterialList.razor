@* @page "/MaterialList" *@
@inject IMaterialRepository _materialRepository
@inject IJSRuntime _JS

<BsModal 
    OnModalConfirmation="ConfirmDelete_Click"
    ButtonBootstrapStyle="btn-danger"
    ButtonText="Delete"
    Title="Are you sure you wish to DELETE this material?">
</BsModal> 

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="~/lib/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py2"> Material List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="material/create" class="btn btn-lg btn-secondary" style="width:250px">
                        <i class="bi bi-plus-square"></i>
                        Add New Material
                    </a>
                </div>
            </div>
            @if (Materials.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in Materials)
                        {
                            <tr>
                                <td>
                                    @obj.MaterialName
                                </td>
                                <td>
                                    <a href="@($"material/update/{obj.MaterialID}")" class="btn btn-primary">
                                        <i class="bi bi-pencil-square"></i>
                                        Edit</a>
                                    <button class="btn btn-danger"
                                            @onclick="() => HandleDelete(obj.MaterialID)">
                                        <i class="bi bi-trash3"></i>
                                        Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            }
        </div>
    </div>
}

@code {
    public bool IsProcessing { get; set; } = false;
    private int DeleteMaterialId { get; set; } = 0;
    private IEnumerable<Material> Materials { get; set; } = new List<Material>();

    protected override async Task OnInitializedAsync()
    {
        await LoadMaterials();
    }

    private async Task LoadMaterials()
    {
        Materials = await _materialRepository.GetAllMaterialsAsync();
    }


    private void HandleDelete(int id)
    {
        DeleteMaterialId = id;
        _JS.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        await _JS.InvokeVoidAsync("HideConfirmationModal");
        if (isConfirmed && DeleteMaterialId != 0)
        {
            var result = await _materialRepository.DeleteMaterialAsync(DeleteMaterialId);
            if (result == null)
            {
                _JS?.ToastrSuccess("Material Deleted Successfully");
            }
            else
            {
                _JS?.ToastrError("Error Encountered while deleting");
                await LoadMaterials();
            }
        }
        else
        {
            DeleteMaterialId = 0;
        }
        IsProcessing = false;
    }
}
